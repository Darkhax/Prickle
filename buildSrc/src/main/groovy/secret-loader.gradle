// Loads properties from a file containing environmental secrets.
import groovy.json.JsonSlurper

// Auto detects a secret file and injects it.
if (project.rootProject.hasProperty('secretFile')) {

    project.logger.lifecycle('Automatically loading properties from the secretFile')
    final def secretsFile = project.rootProject.file(project.rootProject.getProperty('secretFile'))

    if (secretsFile.exists() && secretsFile.name.endsWith('.json')) {

        loadProperties(secretsFile)
    }
}

// Loads properties using a specified json file.
def loadProperties(propertyFile) {

    if (propertyFile.exists()) {

        propertyFile.withReader {

            Map propMap = new JsonSlurper().parse it

            for (entry in propMap) {

                // Filter entries that use _comment in the key.
                if (!entry.key.endsWith('_comment')) {

                    project.ext.set(entry.key, entry.value)
                }
            }

            project.logger.lifecycle("Successfully loaded ${propMap.size()} environment secrets.")
            propMap.clear()
        }
    } else {
        project.logger.warn("Could not find property file! Expected: ${propertyFile}")
    }
}